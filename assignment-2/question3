#include<bits/stdC++.h>
using namespace std;
int findLHS(vector<int>& nums) {
        // sort(nums.begin(),nums.end());
        // int count=0;
        // int left=0,right=0;
        // while(right<nums.size())
        // {
        //     int diff=nums[right]-nums[left];
        //     if(diff==1)
        //     {
        //         count=max(count,right-left+1);
        //     }
        //     if(diff<=1)
        //     {
        //         right++;
        //     }
        //    else
        //     left++;
        // }
        // return count;
        int res=0;
        unordered_map<int,int>mp;
        for(int i=0;i<nums.size();i++)
        {
            mp[nums[i]]++;
        }
        for(auto it:mp)
        {
            int ele=it.first;
            if(mp.find(ele-1)!=mp.end())
            {
                res=max(res,it.second+mp[ele-1]);
            }
        }
      return res;
    }
int main(){
 vector<int>nums={1,3,2,2,5,2,3,7};
 cout<<findLHS(nums)<<" ";
 return 0;
}
