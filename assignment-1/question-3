
// ðŸ’¡ Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

// You must write an algorithm with O(log n) runtime complexity.

// **Example 1:**
// Input: nums = [1,3,5,6], target = 5

// Output: 2

#include<bits/stdC++.h>
using namespace std;
int solve(vector<int>&vec,int target)
{
    int i=0;
    int j=vec.size()-1;
    while(i<j)
    {
        int mid=i+(j-i)/2;
        if(vec[mid]==target)
         return mid;
        else if(vec[mid]>target)
        {
            j=mid-1;
        }
        else
         i=mid+1;
    }
  return i+1;
}
int main(){
   vector<int>vec={1,3,5,6};
   int target=7;
   cout<<solve(vec,target);
   return 0;
}
