//  Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the nonzero elements.

// Note that you must do this in-place without making a copy of the array.

// **Example 1:**
// Input: nums = [0,1,0,3,12]
// Output: [1,3,12,0,0]

#include<bits/stdC++.h>
using namespace std;
void solve(vector<int>&vec)
{
    int n=vec.size(); 
    int count=0;
    for(int i=0;i<n;i++)
    {
        if(vec[i]==0)
        for(int j=i+1;j<n;j++)
        {  
            if(vec[j]!=0)
            {
            swap(vec[j],vec[i]);
            }
        }
    }
}
int main(){
   vector<int>vec={0,3,2,0,0,2,3,0};
     solve(vec);
   for(int it=0;it<vec.size();it++)
     cout<<vec[it]<<" ";
     cout<<endl;
    return 0;
}
