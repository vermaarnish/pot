// ðŸ’¡  Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

// You may assume that each input would have exactly one solution, and you may not use the same element twice.

// You can return the answer in any order.

// **Example:**
// Input: nums = [2,7,11,15], target = 9
// Output0 [0,1]

// **Explanation:** Because nums[0] + nums[1] == 9, we return [0, 1] 
#include<bits/stdc++.h>
using namespace std;
vector<int>solve(vector<int>&arr,int target)
{
    sort(arr.begin(),arr.end());
    int i=0,j=arr.size()-1;
    while(i<j)
    {
        if(arr[i]+arr[j]<target)
         {
            i++;
         }
         else if(arr[i]+arr[j]>target)
         {
            j--;
         }
         else
         return {i,j};
    }
    return {};
}
int main()
{
    vector<int>arr={2,7,11,15};
    vector<int>ans=solve(arr,9);
    if(ans.size()>0)
     cout<<arr[0]<<" "<<arr[1];
    else
     cout<<"no";
    return 0;
}
